#ifndef HELLO_HPP
#define HELLO_HPP

#include <nbavr.hpp>

template <class Clock, class cout_t, class cin_t>
struct Hello : nbavr::Task<Clock> {
    cout_t& cout;
    cin_t& cin;
    uint8_t (&m)[8];

    Hello(cout_t& cout, cin_t& cin, uint8_t (&m)[8]) : cout(cout), cin(cin), m(m) {
    }

    void loop() override {
        char c;

        if(cin.pop(&c)) {
            setChar(c);
        }

        this->sleep(Clock::millisToTicks(20));
    }

    void setChar(char c) {
        if((c >= 'a') && (c <= 'z')) {
            for(int8_t i = 0; i < 8; i++) {
                m[i] = alphabet[c - 'a'][i];
            }
        } else {
            for(int8_t i = 0; i < 8; i++) {
                m[i] = 0;
            }
        }
    }

    const uint8_t alphabet[26][8] = {
        { // A
            0b01111110,
            0b11111111,
            0b11100111,
            0b11100111,
            0b11111111,
            0b11111111,
            0b11100111,
            0b11100111,
        },
        { // B
            0b11111110,
            0b11111111,
            0b11100111,
            0b11111110,
            0b11111110,
            0b11100111,
            0b11111111,
            0b11111110,
        },
        { // C
            0b01111110,
            0b11111111,
            0b11100111,
            0b11100000,
            0b11100000,
            0b11100111,
            0b11111111,
            0b01111110,
        },
        { // D
            0b11111110,
            0b11111111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11111111,
            0b11111110,
        },
        { // E
            0b11111111,
            0b11111111,
            0b11100000,
            0b11111100,
            0b11111100,
            0b11100000,
            0b11111111,
            0b11111111,
        },
        { // F
            0b11111111,
            0b11111111,
            0b11100000,
            0b11111100,
            0b11111100,
            0b11100000,
            0b11100000,
            0b11100000,
        },
        { // G
            0b01111110,
            0b11111111,
            0b11100111,
            0b11100000,
            0b11101111,
            0b11100111,
            0b11111111,
            0b01111110,
        },
        { // H
            0b11100111,
            0b11100111,
            0b11100111,
            0b11111111,
            0b11111111,
            0b11100111,
            0b11100111,
            0b11100111,
        },
        { // I
            0b01111110,
            0b01111110,
            0b00011000,
            0b00011000,
            0b00011000,
            0b00011000,
            0b01111110,
            0b01111110,
        },
        { // J
            0b00001110,
            0b00001110,
            0b00001110,
            0b00001110,
            0b00001110,
            0b00001110,
            0b01111110,
            0b01111100,
        },
        { // K
            0b11100011,
            0b11100111,
            0b11101110,
            0b11111100,
            0b11111100,
            0b11101110,
            0b11100111,
            0b11100011,
        },
        { // L
            0b01110000,
            0b01110000,
            0b01110000,
            0b01110000,
            0b01110000,
            0b01110000,
            0b01111110,
            0b01111110,
        },
        { // M
            0b11000011,
            0b11100111,
            0b11111111,
            0b11111111,
            0b11011011,
            0b11000011,
            0b11000011,
            0b11000011,
        },
        { // N
            0b11100111,
            0b11110111,
            0b11110111,
            0b11111111,
            0b11111111,
            0b11111111,
            0b11101111,
            0b11100111
        },
        { // O
            0b01111110,
            0b11111111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11111111,
            0b01111110
        },
        { // P
            0b11111110,
            0b11111111,
            0b11100111,
            0b11111111,
            0b11111110,
            0b11100000,
            0b11100000,
            0b11100000,
        },
        { // Q
            0b01111110,
            0b11111111,
            0b11100111,
            0b11100111,
            0b11100011,
            0b11101101,
            0b11110110,
            0b01111011
        },
        { // R
            0b11111110,
            0b11111111,
            0b11100111,
            0b11111111,
            0b11111110,
            0b11100111,
            0b11100111,
            0b11100111
        },
        { // S
            0b01111110,
            0b11111111,
            0b11100000,
            0b11111110,
            0b01111111,
            0b00000111,
            0b11111111,
            0b01111110
        },
        { // T
            0b11111111,
            0b11111111,
            0b00011000,
            0b00011000,
            0b00011000,
            0b00011000,
            0b00011000,
            0b00011000,
        },
        { // U
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11111111,
            0b01111110
        },
        { // V
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b11100111,
            0b01111110,
            0b00111100
        },
        { // W
            0b11000011,
            0b11000011,
            0b11000011,
            0b11000011,
            0b11011011,
            0b11111111,
            0b11100111,
            0b11000011
        },
        { // X
            0b11100111,
            0b11100111,
            0b01111110,
            0b00111100,
            0b00111100,
            0b01111110,
            0b11100111,
            0b11100111

        },
        { // Y
            0b11000011,
            0b11000011,
            0b11100111,
            0b01111110,
            0b00111100,
            0b00011000,
            0b00011000,
            0b00011000
        },
        { // Z
            0b11111111,
            0b11111111,
            0b00001111,
            0b00011110,
            0b00111000,
            0b01110000,
            0b11111111,
            0b11111111,
        }
    };
};

#endif
